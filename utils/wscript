## -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-
import os.path

def configure(conf):
    conf.env['ENABLE_MOBILITY_VISUALIZER'] = conf.pkg_check_modules(
        'MOBILITY_VISUALIZER', 'goocanvas gthread-2.0', mandatory=False)
    

def build(bld):
    env = bld.env

    unit_tests = bld.create_ns3_program('run-tests', ['common'])
    unit_tests.install_path = None # do not install
    unit_tests.source = 'run-tests.cc'
    ## link unit test program with all ns3 modules
    unit_tests.uselib_local = 'ns3'
    
    obj = bld.create_ns3_program('bench-simulator', ['simulator'])
    obj.source = 'bench-simulator.cc'

    obj = bld.create_ns3_program('bench-packets', ['common'])
    obj.source = 'bench-packets.cc'

    obj = bld.create_ns3_program('print-introspected-doxygen',
                                 ['internet-stack', 'csma-cd', 'point-to-point'])
    obj.source = 'print-introspected-doxygen.cc'

# XXX: disable mobility visualizer code temporarily.
    env['ENABLE_MOBILITY_VISUALIZER'] = ''
    if env['ENABLE_MOBILITY_VISUALIZER']:
        obj = bld.create_ns3_program('mobility-visualizer',
                                     ['internet-stack', 'mobility'])
        obj.source = ['mobility-visualizer-model.cc', 'mobility-visualizer-view.cc']
        obj.uselib = 'MOBILITY_VISUALIZER'
        if os.path.basename(obj.env['CXX']).startswith("g++"):
            obj.env.append_value('CXXFLAGS', '-fno-strict-aliasing')

