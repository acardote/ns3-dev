## -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

def build(bld):
    mobility = bld.create_ns3_module('mobility', ['core', 'simulator'])
    mobility.source = [
        'grid-topology.cc',
        'hierarchical-mobility-model.cc',
        'mobility-model.cc',
        'mobility-model-notifier.cc',
        'position.cc',
        'random-position.cc',
        'random-topology.cc',
        'rectangle.cc',
        'rectangle-default-value.cc',
        'speed.cc',
        'static-mobility-model.cc',
        'static-speed-helper.cc',
        'static-speed-mobility-model.cc',
        'random-waypoint-mobility-model.cc',
        'random-walk-2d-mobility-model.cc',
        'random-direction-2d-mobility-model.cc',
        'ns2-mobility-file-topology.cc',
        ]

    headers = bld.create_obj('ns3header')
    headers.source = [
        'grid-topology.h',
        'hierarchical-mobility-model.h',
        'mobility-model.h',
        'mobility-model-notifier.h',
        'position.h',
        'random-position.h',
        'random-topology.h',
        'rectangle.h',
        'rectangle-default-value.h',
        'speed.h',
        'static-mobility-model.h',
        'static-speed-helper.h',
        'static-speed-mobility-model.h',
        'random-waypoint-mobility-model.h',
        'random-walk-2d-mobility-model.h',
        'random-direction-2d-mobility-model.h',
        'ns2-mobility-file-topology.h',
        ]
